var searchIndex = {};
searchIndex["rustls"] = {"doc":"# Rustls - a modern TLS library\nRustls is a TLS library that aims to provide a good level of cryptographic security,\nrequires no configuration to achieve that security, and provides no unsafe features or\nobsolete cryptography.","items":[[3,"ClientConfig","rustls","Common configuration for (typically) all connections made by\na program.",null,null],[12,"ciphersuites","","List of ciphersuites, in preference order.",0,null],[12,"root_store","","Collection of root certificates.",0,null],[12,"alpn_protocols","","Which ALPN protocols we include in our client hello.\nIf empty, no ALPN extension is sent.",0,null],[12,"session_persistence","","How we store session data or tickets.",0,null],[12,"mtu","","Our MTU.  If None, we don&#39;t limit TLS message sizes.",0,null],[3,"ClientSession","","This represents a single TLS client session.",null,null],[3,"RootCertStore","","A container for root certificates able to provide a root-of-trust\nfor connection authentication.",null,null],[3,"ServerConfig","","Common configuration for a set of server sessions.",null,null],[12,"ciphersuites","","List of ciphersuites, in preference order.",1,null],[12,"ignore_client_order","","Ignore the client&#39;s ciphersuite order. Instead,\nchoose the top ciphersuite in the server list\nwhich is supported by the client.",1,null],[12,"session_storage","","How to store client sessions.",1,null],[12,"cert_resolver","","How to choose a server cert and key.",1,null],[12,"alpn_protocols","","Protocol names we support, most preferred first.\nIf empty we don&#39;t do ALPN at all.",1,null],[3,"ServerSession","","This represents a single TLS server session.",null,null],[3,"SupportedCipherSuite","","A cipher suite supported by rustls.",null,null],[12,"suite","","The TLS enumeration naming this cipher suite.",2,null],[12,"kx","","",2,null],[12,"bulk","","",2,null],[12,"hash","","",2,null],[12,"sign","","",2,null],[12,"mac_key_len","","",2,null],[12,"enc_key_len","","",2,null],[12,"fixed_iv_len","","",2,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn&#39;t valid right now.\n`expect_types` lists the message types we can expect right now.\n`got_type` is the type we found.  This error is typically\ncaused by a buggy TLS stack (the peer or this one), a broken\nnetwork, or an attack.",3,null],[12,"expect_types","rustls::TLSError","",3,null],[12,"got_type","","",3,null],[13,"InappropriateHandshakeMessage","rustls","We received a TLS handshake message that isn&#39;t valid right now.\n`expect_types` lists the handshake message types we can expect\nright now.  `got_type` is the type we found.",3,null],[12,"expect_types","rustls::TLSError","",3,null],[12,"got_type","","",3,null],[13,"NoCertificatesPresented","rustls","The peer didn&#39;t give us any certificates.",3,null],[13,"DecryptError","","We couldn&#39;t decrypt a message.  This is invariably fatal.",3,null],[13,"AlertReceived","","We received a fatal.  This means the peer is unhappy.",3,null],[13,"WebPKIError","","The presented certificate chain is invalid.",3,null],[13,"General","","A catch-all error for unlikely errors.",3,null],[11,"fmt","","",3,{"inputs":[{"name":"tlserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Make a new, empty `RootCertStore`.",4,{"inputs":[],"output":{"name":"rootcertstore"}}],[11,"add","","Add a single DER-encoded certificate to the store.",4,null],[11,"add_pem_file","","Parse a PEM file and add all certificates found inside.\nErrors are non-specific; they may be io errors in `rd` and\nPEM format errors, but not certificate validity errors.",4,{"inputs":[{"name":"rootcertstore"},{"name":"bufread"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"supportedciphersuite"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"supportedciphersuite"},{"name":"supportedciphersuite"}],"output":{"name":"bool"}}],[11,"get_hash","","",2,{"inputs":[{"name":"supportedciphersuite"}],"output":{"name":"algorithm"}}],[11,"do_client_kx","","We have parameters and a verified public key in `kx_params`.\nGenerate an ephemeral key, generate the shared secret, and\nreturn it and the public half in a `KeyExchangeResult`.",2,{"inputs":[{"name":"supportedciphersuite"},{"name":"vec"}],"output":{"name":"option"}}],[11,"start_server_kx","","",2,{"inputs":[{"name":"supportedciphersuite"},{"name":"namedcurve"}],"output":{"name":"keyexchange"}}],[11,"resolve_sig_alg","","Resolve a single supported `SignatureAndHashAlgorithm` from the\noffered `SupportedSignatureAlgorithms`.  If we return None,\nthe handshake terminates.",2,{"inputs":[{"name":"supportedciphersuite"},{"name":"supportedsignaturealgorithms"}],"output":{"name":"option"}}],[11,"get_aead_alg","","",2,{"inputs":[{"name":"supportedciphersuite"}],"output":{"name":"algorithm"}}],[11,"key_block_len","","",2,{"inputs":[{"name":"supportedciphersuite"}],"output":{"name":"usize"}}],[11,"new","","Make a `ServerConfig` with a default set of ciphersuites,\nno keys/certificates, no ALPN protocols, and no\nsession persistence.",1,{"inputs":[],"output":{"name":"serverconfig"}}],[11,"set_single_cert","","Sets a single certificate chain and matching private key.  This\ncertificate and key is used for all subsequent connections,\nirrespective of things like SNI hostname.",1,{"inputs":[{"name":"serverconfig"},{"name":"vec"},{"name":"vec"}],"output":null}],[11,"set_protocols","","Set the ALPN protocol list to the given protocol names.\nOverwrites any existing configured protocols.",1,null],[11,"new","","Make a new ServerSession.  `config` controls how\nwe behave in the TLS protocol.",5,{"inputs":[{"name":"arc"}],"output":{"name":"serversession"}}],[11,"read_tls","","Read TLS content from `rd`.  This method does internal\nbuffering, so `rd` can supply TLS messages in arbitrary-\nsized chunks (like a socket or pipe might).",5,{"inputs":[{"name":"serversession"},{"name":"read"}],"output":{"name":"result"}}],[11,"write_tls","","Writes TLS messages to `wr`.",5,{"inputs":[{"name":"serversession"},{"name":"write"}],"output":{"name":"result"}}],[11,"process_new_packets","","Processes any new packets read by a previous call to `read_tls`.\nErrors from this function relate to TLS protocol errors, and\nare generally fatal to the session.",5,{"inputs":[{"name":"serversession"}],"output":{"name":"result"}}],[11,"wants_read","","Returns true if the caller should call `read_tls` as soon\nas possible.",5,{"inputs":[{"name":"serversession"}],"output":{"name":"bool"}}],[11,"wants_write","","Returns true if the caller should call `write_tls` as soon\nas possible.",5,{"inputs":[{"name":"serversession"}],"output":{"name":"bool"}}],[11,"send_close_notify","","Queues a close_notify fatal alert to be sent in the next\n`write_tls` call.  This informs the peer that the\nconnection is being closed.",5,{"inputs":[{"name":"serversession"}],"output":null}],[11,"read","","Obtain plaintext data received from the peer over\nthis TLS connection.",5,null],[11,"write","","Send the plaintext `buf` to the peer, encrypting\nand authenticating it.  Once this function succeeds\nyou should call `write_tls` which will output",5,null],[11,"flush","","",5,{"inputs":[{"name":"serversession"}],"output":{"name":"result"}}],[11,"new","","Make a `ClientConfig` with a default set of ciphersuites,\nno root certificates, no ALPN protocols, and no\nsession persistence.",0,{"inputs":[],"output":{"name":"clientconfig"}}],[11,"set_protocols","","Set the ALPN protocol list to the given protocol names.\nOverwrites any existing configured protocols.\nThe first element in the `protocols` list is the most\npreferred, the last is the least preferred.",0,null],[11,"set_persistence","","Sets persistence layer to `persist`.",0,{"inputs":[{"name":"clientconfig"},{"name":"box"}],"output":null}],[11,"set_mtu","","Sets MTU to `mtu`.  If None, the default is used.\nIf Some(x) then x must be greater than 5 bytes.",0,{"inputs":[{"name":"clientconfig"},{"name":"option"}],"output":null}],[11,"new","","Make a new ClientSession.  `config` controls how\nwe behave in the TLS protocol, `hostname` is the\nhostname of who we want to talk to.",6,{"inputs":[{"name":"arc"},{"name":"str"}],"output":{"name":"clientsession"}}],[11,"read_tls","","Read TLS content from `rd`.  This method does internal\nbuffering, so `rd` can supply TLS messages in arbitrary-\nsized chunks (like a socket or pipe might).",6,{"inputs":[{"name":"clientsession"},{"name":"read"}],"output":{"name":"result"}}],[11,"write_tls","","Writes TLS messages to `wr`.",6,{"inputs":[{"name":"clientsession"},{"name":"write"}],"output":{"name":"result"}}],[11,"process_new_packets","","Processes any new packets read by a previous call to `read_tls`.\nErrors from this function relate to TLS protocol errors, and\nare generally fatal to the session.",6,{"inputs":[{"name":"clientsession"}],"output":{"name":"result"}}],[11,"wants_read","","Returns true if the caller should call `read_tls` as soon\nas possible.",6,{"inputs":[{"name":"clientsession"}],"output":{"name":"bool"}}],[11,"wants_write","","Returns true if the caller should call `write_tls` as soon\nas possible.",6,{"inputs":[{"name":"clientsession"}],"output":{"name":"bool"}}],[11,"read","","Obtain plaintext data received from the peer over\nthis TLS connection.",6,null],[11,"write","","Send the plaintext `buf` to the peer, encrypting\nand authenticating it.  Once this function succeeds\nyou should call `write_tls` which will output",6,null],[11,"flush","","",6,{"inputs":[{"name":"clientsession"}],"output":{"name":"result"}}],[0,"internal","","Internal classes which may be useful outside the library.\nThe contents of this section DO NOT form part of the stable interface.",null,null],[0,"pemfile","rustls::internal","Functions for parsing PEM files containing certificates/keys.",null,null],[5,"certs","rustls::internal::pemfile","Extract all the certificates from rd, and return a vec of bytevecs\ncontaining the der-format contents.",null,{"inputs":[{"name":"bufread"}],"output":{"name":"result"}}],[5,"rsa_private_keys","","Extract all RSA private keys from rd, and return a vec of bytevecs\ncontaining the der-format contents.",null,{"inputs":[{"name":"bufread"}],"output":{"name":"result"}}],[0,"msgs","rustls::internal","Low-level TLS message parsing and encoding functions.",null,null],[0,"codec","rustls::internal::msgs","",null,null],[3,"Reader","rustls::internal::msgs::codec","",null,null],[5,"encode_u8","","",null,{"inputs":[{"name":"u8"},{"name":"vec"}],"output":null}],[5,"decode_u8","","",null,null],[5,"read_u8","","",null,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[5,"encode_u16","","",null,{"inputs":[{"name":"u16"},{"name":"vec"}],"output":null}],[5,"decode_u16","","",null,null],[5,"read_u16","","",null,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[5,"encode_u24","","",null,{"inputs":[{"name":"u32"},{"name":"vec"}],"output":null}],[5,"decode_u24","","",null,null],[5,"read_u24","","",null,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[5,"encode_u32","","",null,{"inputs":[{"name":"u32"},{"name":"vec"}],"output":null}],[5,"decode_u32","","",null,null],[5,"read_u32","","",null,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[5,"encode_u64","","",null,{"inputs":[{"name":"u64"},{"name":"vec"}],"output":null}],[5,"put_u64","","",null,null],[5,"encode_vec_u8","","",null,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":null}],[5,"encode_vec_u16","","",null,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":null}],[5,"encode_vec_u24","","",null,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":null}],[5,"read_vec_u8","","",null,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[5,"read_vec_u16","","",null,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[5,"read_vec_u24","","",null,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[8,"Codec","","",null,null],[10,"encode","","",7,{"inputs":[{"name":"codec"},{"name":"vec"}],"output":null}],[10,"read","","",7,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[0,"base","rustls::internal::msgs","",null,null],[3,"Payload","rustls::internal::msgs::base","",null,null],[12,"body","","",8,null],[3,"PayloadU24","","",null,null],[12,"body","","",9,null],[3,"PayloadU16","","",null,null],[12,"body","","",10,null],[3,"PayloadU8","","",null,null],[12,"body","","",11,null],[0,"enums","rustls::internal::msgs","",null,null],[4,"ProtocolVersion","rustls::internal::msgs::enums","",null,null],[13,"SSLv2","","",12,null],[13,"SSLv3","","",12,null],[13,"TLSv1_0","","",12,null],[13,"TLSv1_1","","",12,null],[13,"TLSv1_2","","",12,null],[13,"Unknown","","",12,null],[4,"HashAlgorithm","","",null,null],[13,"NONE","","",13,null],[13,"MD5","","",13,null],[13,"SHA1","","",13,null],[13,"SHA224","","",13,null],[13,"SHA256","","",13,null],[13,"SHA384","","",13,null],[13,"SHA512","","",13,null],[13,"Unknown","","",13,null],[4,"SignatureAlgorithm","","",null,null],[13,"Anonymous","","",14,null],[13,"RSA","","",14,null],[13,"DSA","","",14,null],[13,"ECDSA","","",14,null],[13,"Unknown","","",14,null],[4,"ClientCertificateType","","",null,null],[13,"RSASign","","",15,null],[13,"DSSSign","","",15,null],[13,"RSAFixedDH","","",15,null],[13,"DSSFixedDH","","",15,null],[13,"RSAEphemeralDH","","",15,null],[13,"DSSEphemeralDH","","",15,null],[13,"FortezzaDMS","","",15,null],[13,"Unknown","","",15,null],[4,"Compression","","",null,null],[13,"Null","","",16,null],[13,"Deflate","","",16,null],[13,"LSZ","","",16,null],[13,"Unknown","","",16,null],[4,"ContentType","","",null,null],[13,"ChangeCipherSpec","","",17,null],[13,"Alert","","",17,null],[13,"Handshake","","",17,null],[13,"ApplicationData","","",17,null],[13,"Heartbeat","","",17,null],[13,"Unknown","","",17,null],[4,"HandshakeType","","",null,null],[13,"HelloRequest","","",18,null],[13,"ClientHello","","",18,null],[13,"ServerHello","","",18,null],[13,"Certificate","","",18,null],[13,"ServerKeyExchange","","",18,null],[13,"CertificateRequest","","",18,null],[13,"ServerHelloDone","","",18,null],[13,"CertificateVerify","","",18,null],[13,"ClientKeyExchange","","",18,null],[13,"Finished","","",18,null],[13,"CertificateURL","","",18,null],[13,"CertificateStatus","","",18,null],[13,"Unknown","","",18,null],[4,"AlertLevel","","",null,null],[13,"Warning","","",19,null],[13,"Fatal","","",19,null],[13,"Unknown","","",19,null],[4,"AlertDescription","","",null,null],[13,"CloseNotify","","",20,null],[13,"UnexpectedMessage","","",20,null],[13,"BadRecordMac","","",20,null],[13,"DecryptionFailed","","",20,null],[13,"RecordOverflow","","",20,null],[13,"DecompressionFailure","","",20,null],[13,"HandshakeFailure","","",20,null],[13,"NoCertificate","","",20,null],[13,"BadCertificate","","",20,null],[13,"UnsupportedCertificate","","",20,null],[13,"CertificateRevoked","","",20,null],[13,"CertificateExpired","","",20,null],[13,"CertificateUnknown","","",20,null],[13,"IllegalParameter","","",20,null],[13,"UnknownCA","","",20,null],[13,"AccessDenied","","",20,null],[13,"DecodeError","","",20,null],[13,"DecryptError","","",20,null],[13,"ExportRestriction","","",20,null],[13,"ProtocolVersion","","",20,null],[13,"InsufficientSecurity","","",20,null],[13,"InternalError","","",20,null],[13,"UserCanceled","","",20,null],[13,"NoRenegotiation","","",20,null],[13,"UnsupportedExtension","","",20,null],[13,"UnrecognisedName","","",20,null],[13,"Unknown","","",20,null],[4,"HeartbeatMessageType","","",null,null],[13,"Request","","",21,null],[13,"Response","","",21,null],[13,"Unknown","","",21,null],[4,"ExtensionType","","",null,null],[13,"ServerName","","",22,null],[13,"MaxFragmentLength","","",22,null],[13,"ClientCertificateUrl","","",22,null],[13,"TrustedCAKeys","","",22,null],[13,"TruncatedHMAC","","",22,null],[13,"StatusRequest","","",22,null],[13,"UserMapping","","",22,null],[13,"ClientAuthz","","",22,null],[13,"ServerAuthz","","",22,null],[13,"CertificateType","","",22,null],[13,"EllipticCurves","","",22,null],[13,"ECPointFormats","","",22,null],[13,"SRP","","",22,null],[13,"SignatureAlgorithms","","",22,null],[13,"UseSRTP","","",22,null],[13,"Heartbeat","","",22,null],[13,"ALProtocolNegotiation","","",22,null],[13,"Padding","","",22,null],[13,"SessionTicket","","",22,null],[13,"NextProtocolNegotiation","","",22,null],[13,"ChannelId","","",22,null],[13,"RenegotiationInfo","","",22,null],[13,"Unknown","","",22,null],[4,"ServerNameType","","",null,null],[13,"HostName","","",23,null],[13,"Unknown","","",23,null],[4,"NamedCurve","","",null,null],[13,"sect163k1","","",24,null],[13,"sect163r1","","",24,null],[13,"sect163r2","","",24,null],[13,"sect193r1","","",24,null],[13,"sect193r2","","",24,null],[13,"sect233k1","","",24,null],[13,"sect233r1","","",24,null],[13,"sect239k1","","",24,null],[13,"sect283k1","","",24,null],[13,"sect283r1","","",24,null],[13,"sect409k1","","",24,null],[13,"sect409r1","","",24,null],[13,"sect571k1","","",24,null],[13,"sect571r1","","",24,null],[13,"secp160k1","","",24,null],[13,"secp160r1","","",24,null],[13,"secp160r2","","",24,null],[13,"secp192k1","","",24,null],[13,"secp192r1","","",24,null],[13,"secp224k1","","",24,null],[13,"secp224r1","","",24,null],[13,"secp256k1","","",24,null],[13,"secp256r1","","",24,null],[13,"secp384r1","","",24,null],[13,"secp521r1","","",24,null],[13,"brainpoolp256r1","","",24,null],[13,"brainpoolp384r1","","",24,null],[13,"brainpoolp512r1","","",24,null],[13,"X25519","","",24,null],[13,"X448","","",24,null],[13,"arbitrary_explicit_prime_curves","","",24,null],[13,"arbitrary_explicit_char2_curves","","",24,null],[13,"Unknown","","",24,null],[4,"CipherSuite","","",null,null],[13,"TLS_NULL_WITH_NULL_NULL","","",25,null],[13,"TLS_RSA_WITH_NULL_MD5","","",25,null],[13,"TLS_RSA_WITH_NULL_SHA","","",25,null],[13,"TLS_RSA_EXPORT_WITH_RC4_40_MD5","","",25,null],[13,"TLS_RSA_WITH_RC4_128_MD5","","",25,null],[13,"TLS_RSA_WITH_RC4_128_SHA","","",25,null],[13,"TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",25,null],[13,"TLS_RSA_WITH_IDEA_CBC_SHA","","",25,null],[13,"TLS_RSA_EXPORT_WITH_DES40_CBC_SHA","","",25,null],[13,"TLS_RSA_WITH_DES_CBC_SHA","","",25,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",25,null],[13,"TLS_DH_DSS_WITH_DES_CBC_SHA","","",25,null],[13,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",25,null],[13,"TLS_DH_RSA_WITH_DES_CBC_SHA","","",25,null],[13,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_WITH_DES_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",25,null],[13,"TLS_DHE_RSA_WITH_DES_CBC_SHA","","",25,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_DH_anon_EXPORT_WITH_RC4_40_MD5","","",25,null],[13,"TLS_DH_anon_WITH_RC4_128_MD5","","",25,null],[13,"TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",25,null],[13,"TLS_DH_anon_WITH_DES_CBC_SHA","","",25,null],[13,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"SSL_FORTEZZA_KEA_WITH_NULL_SHA","","",25,null],[13,"SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA","","",25,null],[13,"TLS_KRB5_WITH_DES_CBC_SHA_or_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA","","",25,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_KRB5_WITH_RC4_128_SHA","","",25,null],[13,"TLS_KRB5_WITH_IDEA_CBC_SHA","","",25,null],[13,"TLS_KRB5_WITH_DES_CBC_MD5","","",25,null],[13,"TLS_KRB5_WITH_3DES_EDE_CBC_MD5","","",25,null],[13,"TLS_KRB5_WITH_RC4_128_MD5","","",25,null],[13,"TLS_KRB5_WITH_IDEA_CBC_MD5","","",25,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA","","",25,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA","","",25,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_SHA","","",25,null],[13,"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5","","",25,null],[13,"TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5","","",25,null],[13,"TLS_KRB5_EXPORT_WITH_RC4_40_MD5","","",25,null],[13,"TLS_PSK_WITH_NULL_SHA","","",25,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA","","",25,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA","","",25,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_RSA_WITH_NULL_SHA256","","",25,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",25,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA","","",25,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA","","",25,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA","","",25,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA","","",25,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA_draft","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA_draft","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_DES_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_ECNRA_WITH_DES_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",25,null],[13,"TLS_ECMQV_ECDSA_NULL_SHA_draft","","",25,null],[13,"TLS_ECMQV_ECDSA_WITH_RC4_128_SHA_draft","","",25,null],[13,"TLS_ECMQV_ECDSA_WITH_DES_CBC_SHA_draft","","",25,null],[13,"TLS_ECMQV_ECDSA_WITH_3DES_EDE_CBC_SHA_draft","","",25,null],[13,"TLS_ECMQV_ECNRA_NULL_SHA_draft","","",25,null],[13,"TLS_ECMQV_ECNRA_WITH_RC4_128_SHA_draft","","",25,null],[13,"TLS_ECMQV_ECNRA_WITH_DES_CBC_SHA_draft","","",25,null],[13,"TLS_ECMQV_ECNRA_WITH_3DES_EDE_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_anon_NULL_WITH_SHA_draft","","",25,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA_draft","","",25,null],[13,"TLS_ECDH_anon_WITH_DES_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_anon_EXPORT_WITH_DES40_CBC_SHA_draft","","",25,null],[13,"TLS_ECDH_anon_EXPORT_WITH_RC4_40_SHA_draft","","",25,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_MD5","","",25,null],[13,"TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5","","",25,null],[13,"TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA","","",25,null],[13,"TLS_RSA_EXPORT1024_WITH_RC4_56_SHA","","",25,null],[13,"TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA","","",25,null],[13,"TLS_DHE_DSS_WITH_RC4_128_SHA","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",25,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",25,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_RMD","","",25,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_RMD","","",25,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_RMD","","",25,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_RMD","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_RMD","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_RMD","","",25,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_RMD","","",25,null],[13,"TLS_RSA_WITH_AES_128_CBC_RMD","","",25,null],[13,"TLS_RSA_WITH_AES_256_CBC_RMD","","",25,null],[13,"TLS_GOSTR341094_WITH_28147_CNT_IMIT","","",25,null],[13,"TLS_GOSTR341001_WITH_28147_CNT_IMIT","","",25,null],[13,"TLS_GOSTR341094_WITH_NULL_GOSTR3411","","",25,null],[13,"TLS_GOSTR341001_WITH_NULL_GOSTR3411","","",25,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA","","",25,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA","","",25,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA","","",25,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA","","",25,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA","","",25,null],[13,"TLS_PSK_WITH_RC4_128_SHA","","",25,null],[13,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",25,null],[13,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",25,null],[13,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_RSA_WITH_SEED_CBC_SHA","","",25,null],[13,"TLS_DH_DSS_WITH_SEED_CBC_SHA","","",25,null],[13,"TLS_DH_RSA_WITH_SEED_CBC_SHA","","",25,null],[13,"TLS_DHE_DSS_WITH_SEED_CBC_SHA","","",25,null],[13,"TLS_DHE_RSA_WITH_SEED_CBC_SHA","","",25,null],[13,"TLS_DH_anon_WITH_SEED_CBC_SHA","","",25,null],[13,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",25,null],[13,"TLS_PSK_WITH_NULL_SHA256","","",25,null],[13,"TLS_PSK_WITH_NULL_SHA384","","",25,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",25,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA256","","",25,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA384","","",25,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",25,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA256","","",25,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA384","","",25,null],[13,"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",25,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",25,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256","","",25,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256","","",25,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256","","",25,null],[13,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_ECDH_RSA_WITH_NULL_SHA","","",25,null],[13,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",25,null],[13,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",25,null],[13,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",25,null],[13,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_ECDH_anon_WITH_NULL_SHA","","",25,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",25,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",25,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",25,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",25,null],[13,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",25,null],[13,"TLS_ECDHE_PSK_WITH_RC4_128_SHA","","",25,null],[13,"TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA","","",25,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA","","",25,null],[13,"TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384","","",25,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA","","",25,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA256","","",25,null],[13,"TLS_ECDHE_PSK_WITH_NULL_SHA384","","",25,null],[13,"TLS_RSA_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_RSA_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_DH_anon_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_DH_anon_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_RSA_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_RSA_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_DH_anon_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_DH_anon_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_PSK_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_PSK_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_PSK_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_PSK_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256","","",25,null],[13,"TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384","","",25,null],[13,"TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256","","",25,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384","","",25,null],[13,"TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",25,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",25,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",25,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256","","",25,null],[13,"TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384","","",25,null],[13,"TLS_RSA_WITH_AES_128_CCM","","",25,null],[13,"TLS_RSA_WITH_AES_256_CCM","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM","","",25,null],[13,"TLS_RSA_WITH_AES_128_CCM_8","","",25,null],[13,"TLS_RSA_WITH_AES_256_CCM_8","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_128_CCM_8","","",25,null],[13,"TLS_DHE_RSA_WITH_AES_256_CCM_8","","",25,null],[13,"TLS_PSK_WITH_AES_128_CCM","","",25,null],[13,"TLS_PSK_WITH_AES_256_CCM","","",25,null],[13,"TLS_DHE_PSK_WITH_AES_128_CCM","","",25,null],[13,"TLS_DHE_PSK_WITH_AES_256_CCM","","",25,null],[13,"TLS_PSK_WITH_AES_128_CCM_8","","",25,null],[13,"TLS_PSK_WITH_AES_256_CCM_8","","",25,null],[13,"TLS_PSK_DHE_WITH_AES_128_CCM_8","","",25,null],[13,"TLS_PSK_DHE_WITH_AES_256_CCM_8","","",25,null],[13,"SSL_RSA_FIPS_WITH_DES_CBC_SHA","","",25,null],[13,"SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA","","",25,null],[13,"Unknown","","",25,null],[4,"ECPointFormat","","",null,null],[13,"Uncompressed","","",26,null],[13,"ANSIX962CompressedPrime","","",26,null],[13,"ANSIX962CompressedChar2","","",26,null],[13,"Unknown","","",26,null],[4,"HeartbeatMode","","",null,null],[13,"PeerAllowedToSend","","",27,null],[13,"PeerNotAllowedToSend","","",27,null],[13,"Unknown","","",27,null],[4,"ECCurveType","","",null,null],[13,"ExplicitPrime","","",28,null],[13,"ExplicitChar2","","",28,null],[13,"NamedCurve","","",28,null],[13,"Unknown","","",28,null],[0,"alert","rustls::internal::msgs","",null,null],[3,"AlertMessagePayload","rustls::internal::msgs::alert","",null,null],[12,"level","","",29,null],[12,"description","","",29,null],[0,"handshake","rustls::internal::msgs","",null,null],[3,"Random","rustls::internal::msgs::handshake","",null,null],[12,"gmt_unix_time","","",30,null],[12,"opaque","","",30,null],[3,"SessionID","","",null,null],[12,"bytes","","",31,null],[3,"UnknownExtension","","",null,null],[3,"SignatureAndHashAlgorithm","","",null,null],[12,"hash","","",32,null],[12,"sign","","",32,null],[3,"ServerName","","",null,null],[12,"typ","","",33,null],[12,"payload","","",33,null],[3,"ClientHelloPayload","","",null,null],[12,"client_version","","",34,null],[12,"random","","",34,null],[12,"session_id","","",34,null],[12,"cipher_suites","","",34,null],[12,"compression_methods","","",34,null],[12,"extensions","","",34,null],[3,"ServerHelloPayload","","",null,null],[12,"server_version","","",35,null],[12,"random","","",35,null],[12,"session_id","","",35,null],[12,"cipher_suite","","",35,null],[12,"compression_method","","",35,null],[12,"extensions","","",35,null],[3,"ECParameters","","",null,null],[12,"curve_type","","",36,null],[12,"named_curve","","",36,null],[3,"DigitallySignedStruct","","",null,null],[12,"alg","","",37,null],[12,"sig","","",37,null],[3,"ClientECDHParams","","",null,null],[12,"public","","",38,null],[3,"ServerECDHParams","","",null,null],[12,"curve_params","","",39,null],[12,"public","","",39,null],[3,"ECDHEServerKeyExchange","","",null,null],[12,"params","","",40,null],[12,"dss","","",40,null],[3,"HandshakeMessagePayload","","",null,null],[12,"typ","","",41,null],[12,"payload","","",41,null],[4,"ServerNamePayload","","",null,null],[13,"HostName","","",42,null],[13,"Unknown","","",42,null],[4,"ClientExtension","","",null,null],[13,"ECPointFormats","","",43,null],[13,"EllipticCurves","","",43,null],[13,"SignatureAlgorithms","","",43,null],[13,"Heartbeat","","",43,null],[13,"ServerName","","",43,null],[13,"SessionTicketRequest","","",43,null],[13,"SessionTicketOffer","","",43,null],[13,"Protocols","","",43,null],[13,"Unknown","","",43,null],[4,"ServerExtension","","",null,null],[13,"ECPointFormats","","",44,null],[13,"Heartbeat","","",44,null],[13,"ServerNameAcknowledgement","","",44,null],[13,"SessionTicketAcknowledgement","","",44,null],[13,"RenegotiationInfo","","",44,null],[13,"Protocols","","",44,null],[13,"Unknown","","",44,null],[4,"KeyExchangeAlgorithm","","",null,null],[13,"DH","","",45,null],[13,"DHE","","",45,null],[13,"RSA","","",45,null],[13,"ECDH","","",45,null],[13,"ECDHE","","",45,null],[4,"ServerKeyExchangePayload","","",null,null],[13,"ECDHE","","",46,null],[13,"Unknown","","",46,null],[4,"HandshakePayload","","",null,null],[13,"HelloRequest","","",47,null],[13,"ClientHello","","",47,null],[13,"ServerHello","","",47,null],[13,"Certificate","","",47,null],[13,"ServerKeyExchange","","",47,null],[13,"ServerHelloDone","","",47,null],[13,"ClientKeyExchange","","",47,null],[13,"Finished","","",47,null],[13,"Unknown","","",47,null],[6,"ECPointFormatList","","",null,null],[6,"EllipticCurveList","","",null,null],[6,"SupportedSignatureAlgorithms","","",null,null],[6,"ServerNameRequest","","",null,null],[6,"ProtocolName","","",null,null],[6,"ProtocolNameList","","",null,null],[6,"ASN1Cert","","",null,null],[6,"CertificatePayload","","",null,null],[8,"SupportedPointFormats","","",null,null],[10,"supported","","",48,{"inputs":[],"output":{"name":"ecpointformatlist"}}],[8,"SupportedCurves","","",null,null],[10,"supported","","",49,{"inputs":[],"output":{"name":"ellipticcurvelist"}}],[8,"SupportedMandatedSignatureAlgorithms","","",null,null],[10,"mandated","","",50,{"inputs":[],"output":{"name":"supportedsignaturealgorithms"}}],[10,"supported","","",50,{"inputs":[],"output":{"name":"supportedsignaturealgorithms"}}],[8,"ConvertProtocolNameList","","",null,null],[10,"from_strings","","",51,null],[10,"to_strings","","",51,{"inputs":[{"name":"convertprotocolnamelist"}],"output":{"name":"vec"}}],[10,"to_single_string","","",51,{"inputs":[{"name":"convertprotocolnamelist"}],"output":{"name":"option"}}],[0,"ccs","rustls::internal::msgs","",null,null],[3,"ChangeCipherSpecPayload","rustls::internal::msgs::ccs","",null,null],[0,"message","rustls::internal::msgs","",null,null],[3,"Message","rustls::internal::msgs::message","",null,null],[12,"typ","","",52,null],[12,"version","","",52,null],[12,"payload","","",52,null],[4,"MessagePayload","","",null,null],[13,"Alert","","",53,null],[13,"Handshake","","",53,null],[13,"ChangeCipherSpec","","",53,null],[13,"Opaque","","",53,null],[0,"persist","rustls::internal::msgs","",null,null],[3,"ClientSessionKey","rustls::internal::msgs::persist","",null,null],[3,"ClientSessionValue","","",null,null],[12,"cipher_suite","","",54,null],[12,"session_id","","",54,null],[12,"master_secret","","",54,null],[0,"deframer","rustls::internal::msgs","",null,null],[3,"MessageDeframer","rustls::internal::msgs::deframer","This deframer works to reconstruct TLS messages\nfrom arbitrary-sized reads, buffering as neccessary.\nThe input is `read()`, the output is the `frames` deque.",null,null],[12,"frames","","Completed frames for output.",55,null],[0,"fragmenter","rustls::internal::msgs","",null,null],[3,"MessageFragmenter","rustls::internal::msgs::fragmenter","",null,null],[17,"MAX_FRAGMENT_LEN","","",null,null],[0,"hsjoiner","rustls::internal::msgs","",null,null],[3,"HandshakeJoiner","rustls::internal::msgs::hsjoiner","This works to reconstruct TLS handshake messages\nfrom individual TLS messages.  It&#39;s guaranteed that\nTLS messages output from this layer contain precisely\none handshake payload.",null,null],[12,"frames","","Completed handshake frames for output.",56,null],[7,"ALL_CIPHERSUITES","rustls","A list of all the cipher suites supported by rustls.",null,null],[8,"StoresClientSessions","","A trait for the ability to store client session data.\nThe keys and values are opaque.",null,null],[10,"put","","Stores a new `value` for `key`.  Returns `true`\nif the value was stored.",57,{"inputs":[{"name":"storesclientsessions"},{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[10,"get","","Returns the latest value for `key`.  Returns `None`\nif there&#39;s no such value.",57,{"inputs":[{"name":"storesclientsessions"},{"name":"vec"}],"output":{"name":"option"}}],[11,"init","rustls::internal::msgs::codec","",58,null],[11,"rest","","",58,null],[11,"take","","",58,{"inputs":[{"name":"reader"},{"name":"usize"}],"output":{"name":"option"}}],[11,"any_left","","",58,{"inputs":[{"name":"reader"}],"output":{"name":"bool"}}],[11,"left","","",58,{"inputs":[{"name":"reader"}],"output":{"name":"usize"}}],[11,"used","","",58,{"inputs":[{"name":"reader"}],"output":{"name":"usize"}}],[11,"sub","","",58,{"inputs":[{"name":"reader"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","rustls::internal::msgs::base","",8,{"inputs":[{"name":"payload"}],"output":{"name":"payload"}}],[11,"fmt","","",8,{"inputs":[{"name":"payload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"payload"},{"name":"vec"}],"output":null}],[11,"read","","",8,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"clone","","",9,{"inputs":[{"name":"payloadu24"}],"output":{"name":"payloadu24"}}],[11,"fmt","","",9,{"inputs":[{"name":"payloadu24"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",9,{"inputs":[{"name":"payloadu24"},{"name":"vec"}],"output":null}],[11,"read","","",9,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"payloadu16"}],"output":{"name":"payloadu16"}}],[11,"fmt","","",10,{"inputs":[{"name":"payloadu16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"payloadu16"},{"name":"vec"}],"output":null}],[11,"read","","",10,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"payloadu8"}],"output":{"name":"payloadu8"}}],[11,"fmt","","",11,{"inputs":[{"name":"payloadu8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",11,{"inputs":[{"name":"payloadu8"},{"name":"vec"}],"output":null}],[11,"read","","",11,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"clone","rustls::internal::msgs::enums","",12,{"inputs":[{"name":"protocolversion"}],"output":{"name":"protocolversion"}}],[11,"eq","","",12,{"inputs":[{"name":"protocolversion"},{"name":"protocolversion"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"protocolversion"},{"name":"protocolversion"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"protocolversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",12,{"inputs":[{"name":"protocolversion"},{"name":"vec"}],"output":null}],[11,"read","","",12,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u16","","",12,{"inputs":[{"name":"protocolversion"}],"output":{"name":"u16"}}],[11,"clone","","",13,{"inputs":[{"name":"hashalgorithm"}],"output":{"name":"hashalgorithm"}}],[11,"eq","","",13,{"inputs":[{"name":"hashalgorithm"},{"name":"hashalgorithm"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"hashalgorithm"},{"name":"hashalgorithm"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"hashalgorithm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",13,{"inputs":[{"name":"hashalgorithm"},{"name":"vec"}],"output":null}],[11,"read","","",13,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",13,{"inputs":[{"name":"hashalgorithm"}],"output":{"name":"u8"}}],[11,"clone","","",14,{"inputs":[{"name":"signaturealgorithm"}],"output":{"name":"signaturealgorithm"}}],[11,"eq","","",14,{"inputs":[{"name":"signaturealgorithm"},{"name":"signaturealgorithm"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"signaturealgorithm"},{"name":"signaturealgorithm"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"signaturealgorithm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",14,{"inputs":[{"name":"signaturealgorithm"},{"name":"vec"}],"output":null}],[11,"read","","",14,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",14,{"inputs":[{"name":"signaturealgorithm"}],"output":{"name":"u8"}}],[11,"clone","","",15,{"inputs":[{"name":"clientcertificatetype"}],"output":{"name":"clientcertificatetype"}}],[11,"eq","","",15,{"inputs":[{"name":"clientcertificatetype"},{"name":"clientcertificatetype"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"clientcertificatetype"},{"name":"clientcertificatetype"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"clientcertificatetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",15,{"inputs":[{"name":"clientcertificatetype"},{"name":"vec"}],"output":null}],[11,"read","","",15,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",15,{"inputs":[{"name":"clientcertificatetype"}],"output":{"name":"u8"}}],[11,"clone","","",16,{"inputs":[{"name":"compression"}],"output":{"name":"compression"}}],[11,"eq","","",16,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"compression"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",16,{"inputs":[{"name":"compression"},{"name":"vec"}],"output":null}],[11,"read","","",16,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",16,{"inputs":[{"name":"compression"}],"output":{"name":"u8"}}],[11,"clone","","",17,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"eq","","",17,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",17,{"inputs":[{"name":"contenttype"},{"name":"vec"}],"output":null}],[11,"read","","",17,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",17,{"inputs":[{"name":"contenttype"}],"output":{"name":"u8"}}],[11,"clone","","",18,{"inputs":[{"name":"handshaketype"}],"output":{"name":"handshaketype"}}],[11,"eq","","",18,{"inputs":[{"name":"handshaketype"},{"name":"handshaketype"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"handshaketype"},{"name":"handshaketype"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"handshaketype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",18,{"inputs":[{"name":"handshaketype"},{"name":"vec"}],"output":null}],[11,"read","","",18,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",18,{"inputs":[{"name":"handshaketype"}],"output":{"name":"u8"}}],[11,"clone","","",19,{"inputs":[{"name":"alertlevel"}],"output":{"name":"alertlevel"}}],[11,"eq","","",19,{"inputs":[{"name":"alertlevel"},{"name":"alertlevel"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"alertlevel"},{"name":"alertlevel"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"alertlevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",19,{"inputs":[{"name":"alertlevel"},{"name":"vec"}],"output":null}],[11,"read","","",19,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",19,{"inputs":[{"name":"alertlevel"}],"output":{"name":"u8"}}],[11,"clone","","",20,{"inputs":[{"name":"alertdescription"}],"output":{"name":"alertdescription"}}],[11,"eq","","",20,{"inputs":[{"name":"alertdescription"},{"name":"alertdescription"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"alertdescription"},{"name":"alertdescription"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"alertdescription"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",20,{"inputs":[{"name":"alertdescription"},{"name":"vec"}],"output":null}],[11,"read","","",20,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",20,{"inputs":[{"name":"alertdescription"}],"output":{"name":"u8"}}],[11,"clone","","",21,{"inputs":[{"name":"heartbeatmessagetype"}],"output":{"name":"heartbeatmessagetype"}}],[11,"eq","","",21,{"inputs":[{"name":"heartbeatmessagetype"},{"name":"heartbeatmessagetype"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"heartbeatmessagetype"},{"name":"heartbeatmessagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"heartbeatmessagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",21,{"inputs":[{"name":"heartbeatmessagetype"},{"name":"vec"}],"output":null}],[11,"read","","",21,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",21,{"inputs":[{"name":"heartbeatmessagetype"}],"output":{"name":"u8"}}],[11,"clone","","",22,{"inputs":[{"name":"extensiontype"}],"output":{"name":"extensiontype"}}],[11,"eq","","",22,{"inputs":[{"name":"extensiontype"},{"name":"extensiontype"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"extensiontype"},{"name":"extensiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"extensiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",22,{"inputs":[{"name":"extensiontype"},{"name":"vec"}],"output":null}],[11,"read","","",22,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u16","","",22,{"inputs":[{"name":"extensiontype"}],"output":{"name":"u16"}}],[11,"clone","","",23,{"inputs":[{"name":"servernametype"}],"output":{"name":"servernametype"}}],[11,"eq","","",23,{"inputs":[{"name":"servernametype"},{"name":"servernametype"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"servernametype"},{"name":"servernametype"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"servernametype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",23,{"inputs":[{"name":"servernametype"},{"name":"vec"}],"output":null}],[11,"read","","",23,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",23,{"inputs":[{"name":"servernametype"}],"output":{"name":"u8"}}],[11,"clone","","",24,{"inputs":[{"name":"namedcurve"}],"output":{"name":"namedcurve"}}],[11,"eq","","",24,{"inputs":[{"name":"namedcurve"},{"name":"namedcurve"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"namedcurve"},{"name":"namedcurve"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"namedcurve"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",24,{"inputs":[{"name":"namedcurve"},{"name":"vec"}],"output":null}],[11,"read","","",24,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u16","","",24,{"inputs":[{"name":"namedcurve"}],"output":{"name":"u16"}}],[11,"clone","","",25,{"inputs":[{"name":"ciphersuite"}],"output":{"name":"ciphersuite"}}],[11,"eq","","",25,{"inputs":[{"name":"ciphersuite"},{"name":"ciphersuite"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"ciphersuite"},{"name":"ciphersuite"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"ciphersuite"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",25,{"inputs":[{"name":"ciphersuite"},{"name":"vec"}],"output":null}],[11,"read","","",25,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u16","","",25,{"inputs":[{"name":"ciphersuite"}],"output":{"name":"u16"}}],[11,"clone","","",26,{"inputs":[{"name":"ecpointformat"}],"output":{"name":"ecpointformat"}}],[11,"eq","","",26,{"inputs":[{"name":"ecpointformat"},{"name":"ecpointformat"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"ecpointformat"},{"name":"ecpointformat"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"ecpointformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",26,{"inputs":[{"name":"ecpointformat"},{"name":"vec"}],"output":null}],[11,"read","","",26,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",26,{"inputs":[{"name":"ecpointformat"}],"output":{"name":"u8"}}],[11,"clone","","",27,{"inputs":[{"name":"heartbeatmode"}],"output":{"name":"heartbeatmode"}}],[11,"eq","","",27,{"inputs":[{"name":"heartbeatmode"},{"name":"heartbeatmode"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"heartbeatmode"},{"name":"heartbeatmode"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"heartbeatmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",27,{"inputs":[{"name":"heartbeatmode"},{"name":"vec"}],"output":null}],[11,"read","","",27,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",27,{"inputs":[{"name":"heartbeatmode"}],"output":{"name":"u8"}}],[11,"clone","","",28,{"inputs":[{"name":"eccurvetype"}],"output":{"name":"eccurvetype"}}],[11,"eq","","",28,{"inputs":[{"name":"eccurvetype"},{"name":"eccurvetype"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"eccurvetype"},{"name":"eccurvetype"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"eccurvetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",28,{"inputs":[{"name":"eccurvetype"},{"name":"vec"}],"output":null}],[11,"read","","",28,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"get_u8","","",28,{"inputs":[{"name":"eccurvetype"}],"output":{"name":"u8"}}],[11,"fmt","rustls::internal::msgs::alert","",29,{"inputs":[{"name":"alertmessagepayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",29,{"inputs":[{"name":"alertmessagepayload"},{"name":"vec"}],"output":null}],[11,"read","","",29,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","rustls::internal::msgs::handshake","",30,{"inputs":[{"name":"random"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",30,{"inputs":[{"name":"random"},{"name":"vec"}],"output":null}],[11,"read","","",30,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"from_slice","","",30,null],[11,"write_slice","","",30,null],[11,"clone","","",31,{"inputs":[{"name":"sessionid"}],"output":{"name":"sessionid"}}],[11,"fmt","","",31,{"inputs":[{"name":"sessionid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"sessionid"},{"name":"vec"}],"output":null}],[11,"read","","",31,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"empty","","",31,{"inputs":[],"output":{"name":"sessionid"}}],[11,"fmt","","",59,{"inputs":[{"name":"unknownextension"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",60,{"inputs":[{"name":"ecpointformatlist"},{"name":"vec"}],"output":null}],[11,"read","","",60,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"supported","","",60,{"inputs":[],"output":{"name":"ecpointformatlist"}}],[11,"encode","","",61,{"inputs":[{"name":"ellipticcurvelist"},{"name":"vec"}],"output":null}],[11,"read","","",61,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"supported","","",61,{"inputs":[],"output":{"name":"ellipticcurvelist"}}],[11,"eq","","",32,{"inputs":[{"name":"signatureandhashalgorithm"},{"name":"signatureandhashalgorithm"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"signatureandhashalgorithm"},{"name":"signatureandhashalgorithm"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"signatureandhashalgorithm"}],"output":{"name":"signatureandhashalgorithm"}}],[11,"fmt","","",32,{"inputs":[{"name":"signatureandhashalgorithm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",32,{"inputs":[{"name":"signatureandhashalgorithm"},{"name":"vec"}],"output":null}],[11,"read","","",32,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"mandated","","",62,{"inputs":[],"output":{"name":"supportedsignaturealgorithms"}}],[11,"supported","","",62,{"inputs":[],"output":{"name":"supportedsignaturealgorithms"}}],[11,"encode","","",62,{"inputs":[{"name":"supportedsignaturealgorithms"},{"name":"vec"}],"output":null}],[11,"read","","",62,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","","",42,{"inputs":[{"name":"servernamepayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"servername"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",33,{"inputs":[{"name":"servername"},{"name":"vec"}],"output":null}],[11,"read","","",33,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"encode","","",63,{"inputs":[{"name":"servernamerequest"},{"name":"vec"}],"output":null}],[11,"read","","",63,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"encode","","",64,{"inputs":[{"name":"protocolnamelist"},{"name":"vec"}],"output":null}],[11,"read","","",64,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"from_strings","","",64,null],[11,"to_strings","","",64,{"inputs":[{"name":"protocolnamelist"}],"output":{"name":"vec"}}],[11,"to_single_string","","",64,{"inputs":[{"name":"protocolnamelist"}],"output":{"name":"option"}}],[11,"fmt","","",43,{"inputs":[{"name":"clientextension"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_type","","",43,{"inputs":[{"name":"clientextension"}],"output":{"name":"extensiontype"}}],[11,"encode","","",43,{"inputs":[{"name":"clientextension"},{"name":"vec"}],"output":null}],[11,"read","","",43,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"make_sni","","Make a basic SNI ServerNameRequest quoting `hostname`.",43,{"inputs":[{"name":"str"}],"output":{"name":"clientextension"}}],[11,"fmt","","",44,{"inputs":[{"name":"serverextension"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_type","","",44,{"inputs":[{"name":"serverextension"}],"output":{"name":"extensiontype"}}],[11,"encode","","",44,{"inputs":[{"name":"serverextension"},{"name":"vec"}],"output":null}],[11,"read","","",44,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"make_alpn","","",44,{"inputs":[{"name":"string"}],"output":{"name":"serverextension"}}],[11,"fmt","","",34,{"inputs":[{"name":"clienthellopayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",34,{"inputs":[{"name":"clienthellopayload"},{"name":"vec"}],"output":null}],[11,"read","","",34,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"find_extension","","",34,{"inputs":[{"name":"clienthellopayload"},{"name":"extensiontype"}],"output":{"name":"option"}}],[11,"get_sni_extension","","",34,{"inputs":[{"name":"clienthellopayload"}],"output":{"name":"option"}}],[11,"get_sigalgs_extension","","",34,{"inputs":[{"name":"clienthellopayload"}],"output":{"name":"option"}}],[11,"get_eccurves_extension","","",34,{"inputs":[{"name":"clienthellopayload"}],"output":{"name":"option"}}],[11,"get_ecpoints_extension","","",34,{"inputs":[{"name":"clienthellopayload"}],"output":{"name":"option"}}],[11,"get_alpn_extension","","",34,{"inputs":[{"name":"clienthellopayload"}],"output":{"name":"option"}}],[11,"fmt","","",35,{"inputs":[{"name":"serverhellopayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",35,{"inputs":[{"name":"serverhellopayload"},{"name":"vec"}],"output":null}],[11,"read","","",35,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"find_extension","","",35,{"inputs":[{"name":"serverhellopayload"},{"name":"extensiontype"}],"output":{"name":"option"}}],[11,"get_alpn_protocol","","",35,{"inputs":[{"name":"serverhellopayload"}],"output":{"name":"option"}}],[11,"encode","","",65,{"inputs":[{"name":"certificatepayload"},{"name":"vec"}],"output":null}],[11,"read","","",65,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","","",45,{"inputs":[{"name":"keyexchangealgorithm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"ecparameters"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",36,{"inputs":[{"name":"ecparameters"},{"name":"vec"}],"output":null}],[11,"read","","",36,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"clone","","",37,{"inputs":[{"name":"digitallysignedstruct"}],"output":{"name":"digitallysignedstruct"}}],[11,"fmt","","",37,{"inputs":[{"name":"digitallysignedstruct"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",37,{"inputs":[{"name":"signatureandhashalgorithm"},{"name":"vec"}],"output":{"name":"digitallysignedstruct"}}],[11,"encode","","",37,{"inputs":[{"name":"digitallysignedstruct"},{"name":"vec"}],"output":null}],[11,"read","","",37,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","","",38,{"inputs":[{"name":"clientecdhparams"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",38,{"inputs":[{"name":"clientecdhparams"},{"name":"vec"}],"output":null}],[11,"read","","",38,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","","",39,{"inputs":[{"name":"serverecdhparams"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",39,{"inputs":[{"name":"namedcurve"},{"name":"vec"}],"output":{"name":"serverecdhparams"}}],[11,"encode","","",39,{"inputs":[{"name":"serverecdhparams"},{"name":"vec"}],"output":null}],[11,"read","","",39,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","","",40,{"inputs":[{"name":"ecdheserverkeyexchange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",40,{"inputs":[{"name":"ecdheserverkeyexchange"},{"name":"vec"}],"output":null}],[11,"read","","",40,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","","",46,{"inputs":[{"name":"serverkeyexchangepayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",46,{"inputs":[{"name":"serverkeyexchangepayload"},{"name":"vec"}],"output":null}],[11,"read","","",46,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"unwrap_given_kxa","","",46,{"inputs":[{"name":"serverkeyexchangepayload"},{"name":"keyexchangealgorithm"}],"output":{"name":"option"}}],[11,"encode_params","","",46,{"inputs":[{"name":"serverkeyexchangepayload"},{"name":"vec"}],"output":null}],[11,"get_sig","","",46,{"inputs":[{"name":"serverkeyexchangepayload"}],"output":{"name":"option"}}],[11,"fmt","","",47,{"inputs":[{"name":"handshakepayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"handshakemessagepayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",41,{"inputs":[{"name":"handshakemessagepayload"},{"name":"vec"}],"output":null}],[11,"read","","",41,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","rustls::internal::msgs::ccs","",66,{"inputs":[{"name":"changecipherspecpayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",66,{"inputs":[{"name":"changecipherspecpayload"},{"name":"vec"}],"output":null}],[11,"read","","",66,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"fmt","rustls::internal::msgs::message","",53,{"inputs":[{"name":"messagepayload"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",53,{"inputs":[{"name":"messagepayload"},{"name":"vec"}],"output":null}],[11,"decode_given_type","","",53,{"inputs":[{"name":"messagepayload"},{"name":"contenttype"}],"output":{"name":"option"}}],[11,"opaque","","",53,{"inputs":[{"name":"vec"}],"output":{"name":"messagepayload"}}],[11,"fmt","","",52,{"inputs":[{"name":"message"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",52,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"encode","","",52,{"inputs":[{"name":"message"},{"name":"vec"}],"output":null}],[11,"is_content_type","","",52,{"inputs":[{"name":"message"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"decode_payload","","",52,{"inputs":[{"name":"message"}],"output":null}],[11,"get_opaque_payload","","",52,{"inputs":[{"name":"message"}],"output":{"name":"option"}}],[11,"fmt","rustls::internal::msgs::persist","",67,{"inputs":[{"name":"clientsessionkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",67,{"inputs":[{"name":"clientsessionkey"},{"name":"vec"}],"output":null}],[11,"read","","",67,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"for_dns_name","","",67,{"inputs":[{"name":"str"}],"output":{"name":"clientsessionkey"}}],[11,"get_encoding","","",67,{"inputs":[{"name":"clientsessionkey"}],"output":{"name":"vec"}}],[11,"fmt","","",54,{"inputs":[{"name":"clientsessionvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",54,{"inputs":[{"name":"clientsessionvalue"},{"name":"vec"}],"output":null}],[11,"read","","",54,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"new","","",54,{"inputs":[{"name":"ciphersuite"},{"name":"sessionid"},{"name":"vec"}],"output":{"name":"clientsessionvalue"}}],[11,"read_bytes","","",54,null],[11,"get_encoding","","",54,{"inputs":[{"name":"clientsessionvalue"}],"output":{"name":"vec"}}],[11,"new","rustls::internal::msgs::deframer","",55,{"inputs":[],"output":{"name":"messagedeframer"}}],[11,"read","","Read some bytes from `rd`, and add them to our internal\nbuffer.  If this means our internal buffer contains\nfull messages, decode them all.",55,{"inputs":[{"name":"messagedeframer"},{"name":"read"}],"output":{"name":"result"}}],[11,"has_pending","","Returns true if we have messages for the caller\nto process, either whole messages in our output\nqueue or partial messages in our buffer.",55,{"inputs":[{"name":"messagedeframer"}],"output":{"name":"bool"}}],[11,"new","rustls::internal::msgs::fragmenter","",68,{"inputs":[{"name":"usize"}],"output":{"name":"messagefragmenter"}}],[11,"fragment","","Take the Message `msg` and re-fragment it into new\nmessages whose fragment is no more than max_frag.\nThe new messages are appended to the `out` deque.",68,{"inputs":[{"name":"messagefragmenter"},{"name":"message"},{"name":"vecdeque"}],"output":null}],[11,"new","rustls::internal::msgs::hsjoiner","",56,{"inputs":[],"output":{"name":"handshakejoiner"}}],[11,"want_message","","Do we want to process this message?",56,{"inputs":[{"name":"handshakejoiner"},{"name":"message"}],"output":{"name":"bool"}}],[11,"take_message","","Take the message, and join/split it as needed.\nReturn the number of new messages added to the\noutput deque as a result of this message.",56,{"inputs":[{"name":"handshakejoiner"},{"name":"message"}],"output":{"name":"usize"}}]],"paths":[[3,"ClientConfig"],[3,"ServerConfig"],[3,"SupportedCipherSuite"],[4,"TLSError"],[3,"RootCertStore"],[3,"ServerSession"],[3,"ClientSession"],[8,"Codec"],[3,"Payload"],[3,"PayloadU24"],[3,"PayloadU16"],[3,"PayloadU8"],[4,"ProtocolVersion"],[4,"HashAlgorithm"],[4,"SignatureAlgorithm"],[4,"ClientCertificateType"],[4,"Compression"],[4,"ContentType"],[4,"HandshakeType"],[4,"AlertLevel"],[4,"AlertDescription"],[4,"HeartbeatMessageType"],[4,"ExtensionType"],[4,"ServerNameType"],[4,"NamedCurve"],[4,"CipherSuite"],[4,"ECPointFormat"],[4,"HeartbeatMode"],[4,"ECCurveType"],[3,"AlertMessagePayload"],[3,"Random"],[3,"SessionID"],[3,"SignatureAndHashAlgorithm"],[3,"ServerName"],[3,"ClientHelloPayload"],[3,"ServerHelloPayload"],[3,"ECParameters"],[3,"DigitallySignedStruct"],[3,"ClientECDHParams"],[3,"ServerECDHParams"],[3,"ECDHEServerKeyExchange"],[3,"HandshakeMessagePayload"],[4,"ServerNamePayload"],[4,"ClientExtension"],[4,"ServerExtension"],[4,"KeyExchangeAlgorithm"],[4,"ServerKeyExchangePayload"],[4,"HandshakePayload"],[8,"SupportedPointFormats"],[8,"SupportedCurves"],[8,"SupportedMandatedSignatureAlgorithms"],[8,"ConvertProtocolNameList"],[3,"Message"],[4,"MessagePayload"],[3,"ClientSessionValue"],[3,"MessageDeframer"],[3,"HandshakeJoiner"],[8,"StoresClientSessions"],[3,"Reader"],[3,"UnknownExtension"],[6,"ECPointFormatList"],[6,"EllipticCurveList"],[6,"SupportedSignatureAlgorithms"],[6,"ServerNameRequest"],[6,"ProtocolNameList"],[6,"CertificatePayload"],[3,"ChangeCipherSpecPayload"],[3,"ClientSessionKey"],[3,"MessageFragmenter"]]};
searchIndex["webpki"] = {"doc":"","items":[[3,"TrustAnchor","webpki","A trust anchor (a.k.a. root CA).",null,null],[12,"subject","","",0,null],[12,"spki","","",0,null],[12,"name_constraints","","",0,null],[4,"Error","","",null,null],[13,"BadDER","","",1,null],[13,"BadDERTime","","",1,null],[13,"BadSignature","","",1,null],[13,"CAUsedAsEndEntity","","",1,null],[13,"CertExpired","","",1,null],[13,"CertNotValidForName","","",1,null],[13,"CertNotValidYet","","",1,null],[13,"EndEntityUsedAsCA","","",1,null],[13,"ExtensionValueInvalid","","",1,null],[13,"Fatal","","",1,null],[13,"InvalidCertValidity","","",1,null],[13,"InvalidReferenceName","","",1,null],[13,"NameConstraintViolation","","",1,null],[13,"PathLenConstraintViolated","","",1,null],[13,"SignatureAlgorithmMismatch","","",1,null],[13,"RequiredEKUNotFound","","",1,null],[13,"UnknownIssuer","","",1,null],[13,"UnsupportedCertVersion","","",1,null],[13,"UnsupportedCriticalExtension","","",1,null],[13,"UnsupportedEllipticCurve","","",1,null],[13,"UnsupportedKeyAlgorithmForSignature","","",1,null],[13,"UnsupportedSignatureAlgorithm","","",1,null],[4,"FatalError","","",null,null],[13,"ImpossibleState","","",2,null],[13,"InvalidTrustAnchor","","",2,null],[5,"verify_cert_dns_name","","",null,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"result"}}],[5,"verify_tls_cert","","",null,null],[0,"signed_data","","",null,null],[3,"SignedData","webpki::signed_data","",null,null],[12,"data","","",3,null],[12,"algorithm","","",3,null],[12,"signature","","",3,null],[3,"SignatureAlgorithm","","A signature algorithm.",null,null],[5,"parse_signed_data","","",null,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[5,"verify_signed_data","","Verify `signed_data` using the public key in the DER-encoded\nSubjectPublicKeyInfo `spki` using one of the algorithms in\n`supported_algorithms`.",null,null],[7,"ECDSA_P256_SHA1","","",null,null],[7,"ECDSA_P256_SHA256","","",null,null],[7,"ECDSA_P256_SHA384","","",null,null],[7,"ECDSA_P256_SHA512","","",null,null],[7,"ECDSA_P384_SHA1","","",null,null],[7,"ECDSA_P384_SHA256","","",null,null],[7,"ECDSA_P384_SHA384","","",null,null],[7,"ECDSA_P384_SHA512","","",null,null],[7,"RSA_PKCS1_2048_8192_SHA1","","",null,null],[7,"RSA_PKCS1_2048_8192_SHA256","","",null,null],[7,"RSA_PKCS1_2048_8192_SHA384","","",null,null],[7,"RSA_PKCS1_2048_8192_SHA512","","",null,null],[7,"RSA_PKCS1_3072_8192_SHA384","","",null,null],[0,"trust_anchor_util","webpki","Utilities for efficiently embedding trust anchors in programs.",null,null],[5,"cert_der_as_trust_anchor","webpki::trust_anchor_util","Interprets the given DER-encoded certificate as a `TrustAnchor`. The\ncertificate is not validated. In particular, there is no check that the\ncertificate is self-signed or even that the certificate has the cA basic\nconstraint.",null,{"inputs":[{"name":"input"}],"output":{"name":"result"}}],[5,"generate_code_for_trust_anchors","","Generates code for hard-coding the given trust anchors into a program. This\nis designed to be used in a build script. `name` is the name of the public\nstatic variable that will contain the TrustAnchor array.",null,null],[11,"eq","webpki","",1,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"eq","","",2,{"inputs":[{"name":"fatalerror"},{"name":"fatalerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"fatalerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"fatalerror"}],"output":{"name":"fatalerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"trustanchor"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"TrustAnchor"],[4,"Error"],[4,"FatalError"],[3,"SignedData"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"characterset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"fmt","","",20,{"inputs":[{"name":"newline"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"fmt","","",18,{"inputs":[{"name":"config"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",27,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"shutdownloggererror"}],"output":{"name":"str"}}],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["ring"] = {"doc":"Safe, fast, small crypto using Rust with BoringSSL&#39;s cryptography primitives.","items":[[0,"aead","ring","Authenticated Encryption with Associated Data (AEAD).",null,null],[3,"OpeningKey","ring::aead","A key for authenticating and decrypting (&amp;ldquo;opening&amp;rdquo;)\nAEAD-protected data.",null,null],[3,"SealingKey","","A key for encrypting and signing (&amp;ldquo;sealing&amp;rdquo;) data.",null,null],[3,"Algorithm","","An AEAD Algorithm.",null,null],[5,"open_in_place","","Authenticates and decrypts (&amp;ldquo;opens&amp;rdquo;) data in place.",null,null],[5,"seal_in_place","","Encrypts and signs (&amp;ldquo;seals&amp;rdquo;) data in place.",null,null],[7,"CHACHA20_POLY1305","","ChaCha20-Poly1305 as described in\n[RFC 7539](https://tools.ietf.org/html/rfc7539).",null,null],[7,"CHACHA20_POLY1305_OLD","","The old ChaCha20-Poly13065 construction used in OpenSSH&#39;s\n[chacha20-poly1305@openssh.com](http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/usr.bin/ssh/PROTOCOL.chacha20poly1305)\nand the experimental TLS cipher suites with IDs `0xCC13` (ECDHE-RSA) and\n`0xCC14` (ECDHE-ECDSA). Use `CHACHA20_POLY1305` instead.",null,null],[7,"AES_128_GCM","","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[7,"AES_256_GCM","","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.",null,null],[17,"MAX_OVERHEAD_LEN","","The maximum amount of overhead for the algorithms in this module.",null,null],[11,"new","","Create a new opening key.",0,null],[11,"algorithm","","The key&#39;s AEAD algorithm.",0,{"inputs":[{"name":"openingkey"}],"output":{"name":"algorithm"}}],[11,"new","","C analogs: `EVP_AEAD_CTX_init_with_direction` with direction\n           `evp_aead_seal`, `EVP_AEAD_CTX_init`.",1,null],[11,"algorithm","","The key&#39;s AEAD algorithm.",1,{"inputs":[{"name":"sealingkey"}],"output":{"name":"algorithm"}}],[11,"key_len","","The length of the key.",2,{"inputs":[{"name":"algorithm"}],"output":{"name":"usize"}}],[11,"max_overhead_len","","The maximum number of bytes that sealing operations may add to plaintexts.\nSee also `MAX_OVERHEAD_LEN`.",2,{"inputs":[{"name":"algorithm"}],"output":{"name":"usize"}}],[11,"nonce_len","","The length of the nonces.",2,{"inputs":[{"name":"algorithm"}],"output":{"name":"usize"}}],[0,"agreement","ring","Key Agreement: ECDH, including X25519.",null,null],[3,"Algorithm","ring::agreement","A key agreement algorithm.",null,null],[3,"EphemeralPrivateKey","","An ephemeral private key for use (only) with `agree_ephemeral`. The\nsignature of `agree_ephemeral` ensures that an `EphemeralPrivateKey` can be\nused for at most one key agreement.",null,null],[5,"agree_ephemeral","","Performs a key agreement with an ephemeral private key and the given public\nkey.",null,{"inputs":[{"name":"ephemeralprivatekey"},{"name":"algorithm"},{"name":"input"},{"name":"e"},{"name":"f"}],"output":{"name":"result"}}],[7,"ECDH_P256","","ECDH using the NSA Suite B\nP-256 (secp256r1)\ncurve.",null,null],[7,"ECDH_P384","","ECDH using the NSA Suite B\nP-384 (secp384r1)\ncurve.",null,null],[7,"X25519","","X25519 (ECDH using Curve25519).",null,null],[17,"PUBLIC_KEY_MAX_LEN","","The maximum length, in bytes, of an encoded public key. Note that the value\ndepends on which algorithms are enabled (e.g. whether the `use_heap` feature\nis activated).",null,null],[11,"generate","","Generate a new ephemeral private key for the given algorithm.",3,{"inputs":[{"name":"algorithm"},{"name":"securerandom"}],"output":{"name":"result"}}],[11,"public_key_len","","The size in bytes of the encoded public key.",3,{"inputs":[{"name":"ephemeralprivatekey"}],"output":{"name":"usize"}}],[11,"compute_public_key","","Computes the public key from the private key&#39;s value and fills `out`\nwith the public point encoded in the standard form for the algorithm.",3,null],[0,"constant_time","ring","Constant-time operations.",null,null],[5,"verify_slices_are_equal","ring::constant_time","Returns `Ok(())` if `a == b` and `Err(())` otherwise. The comparison of\n`a` and `b` is done in constant time with respect to the contents of each,\nbut NOT in constant time with respect to the lengths of `a` and `b`.",null,null],[0,"digest","ring","SHA-2 and the legacy SHA-1 digest algorithm.",null,null],[3,"Context","ring::digest","A context for multi-step (Init-Update-Finish) digest calculations.",null,null],[12,"algorithm","","The context&#39;s algorithm.",4,null],[3,"Digest","","A calculated digest value.",null,null],[3,"Algorithm","","A digest algorithm.",null,null],[12,"output_len","","C analog: `EVP_MD_size`",5,null],[12,"chaining_len","","The size of the chaining value of the digest function, in bytes. For\nnon-truncated algorithms (SHA-1, SHA-256, SHA-512), this is equal to\n`output_len`. For truncated algorithms (e.g. SHA-384, SHA-512/256),\nthis is equal to the length before truncation. This is mostly helpful\nfor determining the size of an HMAC key that is appropriate for the\ndigest algorithm.",5,null],[12,"block_len","","C analog: `EVP_MD_block_size`",5,null],[12,"nid","","The OpenSSL/BoringSSL NID for the algorithm. For all the algorithms\ndefined in this module, `a.nid == b.nid` implies that `a` and `b` are\nreferences to the same algorithm.",5,null],[5,"digest","","Returns the digest of `data` using the given digest algorithm.",null,null],[7,"SHA1","","SHA-1 as specified in [FIPS\n180-4](http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).",null,null],[7,"SHA256","","SHA-256 as specified in [FIPS\n180-4](http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).",null,null],[7,"SHA384","","SHA-384 as specified in [FIPS\n180-4](http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).",null,null],[7,"SHA512","","SHA-512 as specified in [FIPS\n180-4](http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).",null,null],[17,"MAX_BLOCK_LEN","","The maximum block length (`Algorithm::block_len`) of all the algorithms in\nthis module.",null,null],[17,"MAX_OUTPUT_LEN","","The maximum output length (`Algorithm::output_len`) of all the algorithms\nin this module.",null,null],[17,"MAX_CHAINING_LEN","","The maximum chaining length (`Algorithm::chaining_len`) of all the\nalgorithms in this module.",null,null],[11,"new","","Constructs a new context.",4,{"inputs":[{"name":"algorithm"}],"output":{"name":"context"}}],[11,"update","","Updates the digest with all the data in `data`. `update` may be called\nzero or more times until `finish` is called. It must not be called\nafter `finish` has been called.",4,null],[11,"finish","","Finalizes the digest calculation and returns the digest value. `finish`\nconsumes the context so it cannot be (mis-)used after `finish` has been\ncalled.",4,{"inputs":[{"name":"context"}],"output":{"name":"digest"}}],[11,"algorithm","","The algorithm that this context is using.",4,{"inputs":[{"name":"context"}],"output":{"name":"algorithm"}}],[11,"clone","","",4,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"algorithm","","The algorithm that was used to calculate the digest value.",6,{"inputs":[{"name":"digest"}],"output":{"name":"algorithm"}}],[11,"as_ref","","",6,null],[0,"hkdf","ring","HMAC-based Extract-and-Expand Key Derivation Function.",null,null],[5,"extract_and_expand","ring::hkdf","Fills `out` with the output of the HKDF Extract-and-Expand operation for\nthe given inputs.",null,null],[5,"extract","","The HKDF-Extract operation.",null,null],[5,"expand","","Fills `out` with the output of the HKDF-Expand operation for the given\ninputs.",null,null],[0,"hmac","ring","HMAC is specified in [RFC 2104](https://tools.ietf.org/html/rfc2104).",null,null],[3,"SigningKey","ring::hmac","A key to use for HMAC signing.",null,null],[3,"SigningContext","","A context for multi-step (Init-Update-Finish) HMAC signing.",null,null],[3,"VerificationKey","","A key to use for HMAC authentication.",null,null],[5,"sign","","Calculates the HMAC of `data` using the key `key` in one step.",null,null],[5,"verify","","Calculates the HMAC of `data` using the key `key`, and verifies whether the\nresultant value equals `signature`, in one step.",null,null],[5,"verify_with_own_key","","Calculates the HMAC of `data` using the signing key `key`, and verifies\nwhether the resultant value equals `signature`, in one step.",null,null],[11,"generate","","Generate an HMAC signing key for the given digest algorithm using\n|ring::rand|. The key will be `digest_alg.chaining_len` bytes long. The\nkey size choice is based on the recommendation of\n[NIST SP 800-107, Section 5.3.4: Security Effect of the HMAC\nKey](http://csrc.nist.gov/publications/nistpubs/800-107-rev1/sp800-107-rev1.pdf)\nand is consistent with the key lengths chosen for TLS as described in\n[RFC 5246, Appendix C](https://tools.ietf.org/html/rfc5246#appendix-C).",7,{"inputs":[{"name":"algorithm"},{"name":"securerandom"}],"output":{"name":"result"}}],[11,"new","","Construct an HMAC signing key using the given digest algorithm and key\nvalue.",7,null],[11,"digest_algorithm","","The digest algorithm for the key.",7,{"inputs":[{"name":"signingkey"}],"output":{"name":"algorithm"}}],[11,"with_key","","Constructs a new HMAC signing context using the given digest algorithm\nand key.",8,{"inputs":[{"name":"signingkey"}],"output":{"name":"signingcontext"}}],[11,"update","","Updates the HMAC with all the data in `data`. `update` may be called\nzero or more times until `finish` is called.",8,null],[11,"sign","","Finalizes the HMAC calculation and returns the HMAC value. `sign`\nconsumes the context so it cannot be (mis-)used after `sign` has been\ncalled.",8,{"inputs":[{"name":"signingcontext"}],"output":{"name":"digest"}}],[11,"new","","Construct an HMAC verification key using the given digest algorithm and\nkey value.",9,null],[0,"pbkdf2","ring","PBKDF2 derivation and verification.",null,null],[3,"PRF","ring::pbkdf2","A PRF algorithm for use with `derive` and `verify`.",null,null],[5,"derive","","Fills `out` with the key derived using PBKDF2 with the given inputs.",null,null],[5,"verify","","Verifies that a previously-derived (e.g., using `derive`) PBKDF2 value\nmatches the PBKDF2 value derived from the other inputs.",null,null],[7,"HMAC_SHA256","","HMAC-SHA256.",null,null],[7,"HMAC_SHA512","","HMAC-SHA512.",null,null],[0,"rand","ring","Cryptographic psuedo-random number generation.",null,null],[3,"SystemRandom","ring::rand","A secure random number generator where the random values come directly\nfrom the operating system.",null,null],[8,"SecureRandom","","A secure random number generator.",null,null],[10,"fill","","Fills `dest` with random bytes.",10,null],[11,"new","","Constructs a new `SystemRandom`.",11,{"inputs":[],"output":{"name":"systemrandom"}}],[11,"fill","","This is the same as calling `fill` through the `SecureRandom` trait,\nbut allows callers to avoid the annoying step of needing to\n`use rand::SecureRandom` just to call `fill` on a `SystemRandom`.",11,null],[11,"fill","","",11,null],[0,"signature","ring","Public key signatures: signing and verification.",null,null],[3,"Ed25519KeyPair","ring::signature","An Ed25519 key pair.",null,null],[3,"RSAKeyPair","","An RSA key pair.",null,null],[3,"Signature","","A public key signature.",null,null],[3,"VerificationAlgorithm","","A signature verification algorithm.",null,null],[5,"verify","","Verify the signature `signature` of message `msg` with the public key\n`public_key` using the algorithm `alg`.",null,{"inputs":[{"name":"verificationalgorithm"},{"name":"input"},{"name":"input"},{"name":"input"}],"output":{"name":"result"}}],[7,"ECDSA_P256_SHA1_VERIFY","","Verification of ECDSA signatures using the\nP-256 (secp256r1)\n curve and the \nSHA-1\n digest algorithm.",null,null],[7,"ECDSA_P256_SHA256_VERIFY","","Verification of ECDSA signatures using the\nP-256 (secp256r1)\n curve and the \nSHA-256\n digest algorithm.",null,null],[7,"ECDSA_P256_SHA384_VERIFY","","Verification of ECDSA signatures using the\nP-256 (secp256r1)\n curve and the \nSHA-384\n digest algorithm.",null,null],[7,"ECDSA_P256_SHA512_VERIFY","","Verification of ECDSA signatures using the\nP-256 (secp256r1)\n curve and the \nSHA-512\n digest algorithm.",null,null],[7,"ECDSA_P384_SHA1_VERIFY","","Verification of ECDSA signatures using the\nP-384 (secp384r1)\n curve and the \nSHA-1\n digest algorithm.",null,null],[7,"ECDSA_P384_SHA256_VERIFY","","Verification of ECDSA signatures using the\nP-384 (secp384r1)\n curve and the \nSHA-256\n digest algorithm.",null,null],[7,"ECDSA_P384_SHA384_VERIFY","","Verification of ECDSA signatures using the\nP-384 (secp384r1)\n curve and the \nSHA-384\n digest algorithm.",null,null],[7,"ECDSA_P384_SHA512_VERIFY","","Verification of ECDSA signatures using the\nP-384 (secp384r1)\n curve and the \nSHA-512\n digest algorithm.",null,null],[7,"ED25519_VERIFY","","Verification of [Ed25519](http://ed25519.cr.yp.to/) signatures.",null,null],[7,"RSA_PKCS1_SHA256","","PKCS#1 1.5 padding with the\nSHA256\n digest algorithm.",null,null],[7,"RSA_PKCS1_SHA384","","PKCS#1 1.5 padding with the\nSHA384\n digest algorithm.",null,null],[7,"RSA_PKCS1_SHA512","","PKCS#1 1.5 padding with the\nSHA512\n digest algorithm.",null,null],[7,"RSA_PKCS1_2048_8192_SHA1_VERIFY","","Verification of RSA PKCS#1 1.5 signatures of\n2048\n-8192 bits \nusing the \nSHA-1\n digest algorithm.",null,null],[7,"RSA_PKCS1_2048_8192_SHA256_VERIFY","","Verification of RSA PKCS#1 1.5 signatures of\n2048\n-8192 bits \nusing the \nSHA-256\n digest algorithm.",null,null],[7,"RSA_PKCS1_2048_8192_SHA384_VERIFY","","Verification of RSA PKCS#1 1.5 signatures of\n2048\n-8192 bits \nusing the \nSHA-384\n digest algorithm.",null,null],[7,"RSA_PKCS1_2048_8192_SHA512_VERIFY","","Verification of RSA PKCS#1 1.5 signatures of\n2048\n-8192 bits \nusing the \nSHA-512\n digest algorithm.",null,null],[7,"RSA_PKCS1_3072_8192_SHA384_VERIFY","","Verification of RSA PKCS#1 1.5 signatures of\n3072\n-8192 bits \nusing the \nSHA-384\n digest algorithm.",null,null],[11,"as_slice","","Returns a reference to the signature&#39;s encoded value.",12,null],[11,"generate","","Generates a new key pair.",13,{"inputs":[{"name":"securerandom"}],"output":{"name":"result"}}],[11,"from_bytes","","Copies key data from the given slices to create a new key pair. The\nfirst slice must hold the private key and the second slice must hold\nthe public key. Both slices must contain 32 little-endian-encoded\nbytes.",13,null],[11,"private_key_bytes","","Returns a reference to the little-endian-encoded private key bytes.",13,null],[11,"public_key_bytes","","Returns a reference to the little-endian-encoded public key bytes.",13,null],[11,"sign","","Returns the signature of the message `msg`.",13,null],[11,"from_der","","Parse a private key in DER-encoded ASN.1 `RSAPrivateKey` form (see [RFC\n3447\nAppendix A.1.2](https://tools.ietf.org/html/rfc3447#appendix-A.1.2)).",14,{"inputs":[{"name":"input"}],"output":{"name":"result"}}],[11,"public_modulus_len","","Returns the length in bytes of the key pair&#39;s public modulus.",14,{"inputs":[{"name":"rsakeypair"}],"output":{"name":"usize"}}],[11,"sign","","Sign `msg`. `msg` is digested using the digest algorithm from\n`padding_alg` and the digest is then padded using the padding algorithm\nfrom `padding_alg`. The signature it written into `signature`;\n`signature`&#39;s length must be exactly the length returned by\n`public_modulus_len()`. `rng` is used for blinding the message during\nsigning, to mitigate some side-channel (e.g. timing) attacks.",14,null],[11,"drop","","",14,{"inputs":[{"name":"rsakeypair"}],"output":null}]],"paths":[[3,"OpeningKey"],[3,"SealingKey"],[3,"Algorithm"],[3,"EphemeralPrivateKey"],[3,"Context"],[3,"Algorithm"],[3,"Digest"],[3,"SigningKey"],[3,"SigningContext"],[3,"VerificationKey"],[8,"SecureRandom"],[3,"SystemRandom"],[3,"Signature"],[3,"Ed25519KeyPair"],[3,"RSAKeyPair"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",0,null],[10,"deref","","The method called to dereference a value",0,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"get","","",1,{"inputs":[{"name":"lazy"},{"name":"f"}],"output":{"name":"t"}}],[14,"__lazy_static_create!","lazy_static","",null,null],[14,"lazy_static!","","",null,null]],"paths":[[8,"__Deref"],[3,"Lazy"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,{"inputs":[{"name":"duration"}],"output":{"name":"result"}}],[11,"neg","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"outofrangeerror"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"outofrangeerror"},{"name":"outofrangeerror"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"outofrangeerror"}],"output":{"name":"outofrangeerror"}}],[11,"fmt","","",5,{"inputs":[{"name":"outofrangeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"outofrangeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"outofrangeerror"}],"output":{"name":"str"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"timespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",6,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,{"inputs":[{"name":"precisetime"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"fmt","","",7,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","",7,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"sub","","",7,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"add","","",7,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"tm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"tm"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"tm"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"clone","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",14,null],[12,"sin_port","","",14,null],[12,"sin_addr","","",14,null],[12,"sin_zero","","",14,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",15,null],[12,"sin6_port","","",15,null],[12,"sin6_flowinfo","","",15,null],[12,"sin6_addr","","",15,null],[12,"sin6_scope_id","","",15,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",16,null],[12,"sun_path","","",16,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",17,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",18,null],[12,"ai_family","","",18,null],[12,"ai_socktype","","",18,null],[12,"ai_protocol","","",18,null],[12,"ai_addrlen","","",18,null],[12,"ai_addr","","",18,null],[12,"ai_canonname","","",18,null],[12,"ai_next","","",18,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",19,null],[12,"nl_pid","","",19,null],[12,"nl_groups","","",19,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",22,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",23,null],[12,"dli_fbase","","",23,null],[12,"dli_sname","","",23,null],[12,"dli_saddr","","",23,null],[3,"epoll_event","","",null,null],[12,"events","","",24,null],[12,"u64","","",24,null],[3,"utsname","","",null,null],[12,"sysname","","",25,null],[12,"nodename","","",25,null],[12,"release","","",25,null],[12,"version","","",25,null],[12,"machine","","",25,null],[12,"domainname","","",25,null],[3,"lconv","","",null,null],[12,"decimal_point","","",26,null],[12,"thousands_sep","","",26,null],[12,"grouping","","",26,null],[12,"int_curr_symbol","","",26,null],[12,"currency_symbol","","",26,null],[12,"mon_decimal_point","","",26,null],[12,"mon_thousands_sep","","",26,null],[12,"mon_grouping","","",26,null],[12,"positive_sign","","",26,null],[12,"negative_sign","","",26,null],[12,"int_frac_digits","","",26,null],[12,"frac_digits","","",26,null],[12,"p_cs_precedes","","",26,null],[12,"p_sep_by_space","","",26,null],[12,"n_cs_precedes","","",26,null],[12,"n_sep_by_space","","",26,null],[12,"p_sign_posn","","",26,null],[12,"n_sign_posn","","",26,null],[12,"int_p_cs_precedes","","",26,null],[12,"int_p_sep_by_space","","",26,null],[12,"int_n_cs_precedes","","",26,null],[12,"int_n_sep_by_space","","",26,null],[12,"int_p_sign_posn","","",26,null],[12,"int_n_sign_posn","","",26,null],[3,"dirent","","",null,null],[12,"d_ino","","",27,null],[12,"d_off","","",27,null],[12,"d_reclen","","",27,null],[12,"d_type","","",27,null],[12,"d_name","","",27,null],[3,"dirent64","","",null,null],[12,"d_ino","","",28,null],[12,"d_off","","",28,null],[12,"d_reclen","","",28,null],[12,"d_type","","",28,null],[12,"d_name","","",28,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",29,null],[12,"rlim_max","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_pathv","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_flags","","",30,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",31,null],[12,"ifa_name","","",31,null],[12,"ifa_flags","","",31,null],[12,"ifa_addr","","",31,null],[12,"ifa_netmask","","",31,null],[12,"ifa_ifu","","",31,null],[12,"ifa_data","","",31,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",32,null],[12,"pw_passwd","","",32,null],[12,"pw_uid","","",32,null],[12,"pw_gid","","",32,null],[12,"pw_gecos","","",32,null],[12,"pw_dir","","",32,null],[12,"pw_shell","","",32,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",33,null],[12,"f_frsize","","",33,null],[12,"f_blocks","","",33,null],[12,"f_bfree","","",33,null],[12,"f_bavail","","",33,null],[12,"f_files","","",33,null],[12,"f_ffree","","",33,null],[12,"f_favail","","",33,null],[12,"f_fsid","","",33,null],[12,"f_flag","","",33,null],[12,"f_namemax","","",33,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",34,null],[12,"dqb_bsoftlimit","","",34,null],[12,"dqb_curspace","","",34,null],[12,"dqb_ihardlimit","","",34,null],[12,"dqb_isoftlimit","","",34,null],[12,"dqb_curinodes","","",34,null],[12,"dqb_btime","","",34,null],[12,"dqb_itime","","",34,null],[12,"dqb_valid","","",34,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",35,null],[12,"ssi_errno","","",35,null],[12,"ssi_code","","",35,null],[12,"ssi_pid","","",35,null],[12,"ssi_uid","","",35,null],[12,"ssi_fd","","",35,null],[12,"ssi_tid","","",35,null],[12,"ssi_band","","",35,null],[12,"ssi_overrun","","",35,null],[12,"ssi_trapno","","",35,null],[12,"ssi_status","","",35,null],[12,"ssi_int","","",35,null],[12,"ssi_ptr","","",35,null],[12,"ssi_utime","","",35,null],[12,"ssi_stime","","",35,null],[12,"ssi_addr","","",35,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",36,null],[12,"mq_maxmsg","","",36,null],[12,"mq_msgsize","","",36,null],[12,"mq_curmsgs","","",36,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",37,null],[12,"sa_mask","","",37,null],[12,"sa_flags","","",37,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",38,null],[12,"ss_flags","","",38,null],[12,"ss_size","","",38,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",39,null],[12,"si_errno","","",39,null],[12,"si_code","","",39,null],[12,"_pad","","",39,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",40,null],[12,"gl_pathv","","",40,null],[12,"gl_offs","","",40,null],[12,"gl_flags","","",40,null],[3,"ucred","","",null,null],[12,"pid","","",41,null],[12,"uid","","",41,null],[12,"gid","","",41,null],[3,"statfs","","",null,null],[12,"f_type","","",42,null],[12,"f_bsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_fsid","","",42,null],[12,"f_namelen","","",42,null],[12,"f_frsize","","",42,null],[3,"msghdr","","",null,null],[12,"msg_name","","",43,null],[12,"msg_namelen","","",43,null],[12,"msg_iov","","",43,null],[12,"msg_iovlen","","",43,null],[12,"msg_control","","",43,null],[12,"msg_controllen","","",43,null],[12,"msg_flags","","",43,null],[3,"termios","","",null,null],[12,"c_iflag","","",44,null],[12,"c_oflag","","",44,null],[12,"c_cflag","","",44,null],[12,"c_lflag","","",44,null],[12,"c_line","","",44,null],[12,"c_cc","","",44,null],[12,"c_ispeed","","",44,null],[12,"c_ospeed","","",44,null],[3,"flock","","",null,null],[12,"l_type","","",45,null],[12,"l_whence","","",45,null],[12,"l_start","","",45,null],[12,"l_len","","",45,null],[12,"l_pid","","",45,null],[3,"ipc_perm","","",null,null],[12,"__key","","",46,null],[12,"uid","","",46,null],[12,"gid","","",46,null],[12,"cuid","","",46,null],[12,"cgid","","",46,null],[12,"mode","","",46,null],[12,"__seq","","",46,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",47,null],[12,"shm_segsz","","",47,null],[12,"shm_atime","","",47,null],[12,"shm_dtime","","",47,null],[12,"shm_ctime","","",47,null],[12,"shm_cpid","","",47,null],[12,"shm_lpid","","",47,null],[12,"shm_nattch","","",47,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",48,null],[12,"loads","","",48,null],[12,"totalram","","",48,null],[12,"freeram","","",48,null],[12,"sharedram","","",48,null],[12,"bufferram","","",48,null],[12,"totalswap","","",48,null],[12,"freeswap","","",48,null],[12,"procs","","",48,null],[12,"pad","","",48,null],[12,"totalhigh","","",48,null],[12,"freehigh","","",48,null],[12,"mem_unit","","",48,null],[12,"_f","","",48,null],[3,"stat","","",null,null],[12,"st_dev","","",49,null],[12,"st_ino","","",49,null],[12,"st_nlink","","",49,null],[12,"st_mode","","",49,null],[12,"st_uid","","",49,null],[12,"st_gid","","",49,null],[12,"st_rdev","","",49,null],[12,"st_size","","",49,null],[12,"st_blksize","","",49,null],[12,"st_blocks","","",49,null],[12,"st_atime","","",49,null],[12,"st_atime_nsec","","",49,null],[12,"st_mtime","","",49,null],[12,"st_mtime_nsec","","",49,null],[12,"st_ctime","","",49,null],[12,"st_ctime_nsec","","",49,null],[3,"stat64","","",null,null],[12,"st_dev","","",50,null],[12,"st_ino","","",50,null],[12,"st_nlink","","",50,null],[12,"st_mode","","",50,null],[12,"st_uid","","",50,null],[12,"st_gid","","",50,null],[12,"st_rdev","","",50,null],[12,"st_size","","",50,null],[12,"st_blksize","","",50,null],[12,"st_blocks","","",50,null],[12,"st_atime","","",50,null],[12,"st_atime_nsec","","",50,null],[12,"st_mtime","","",50,null],[12,"st_mtime_nsec","","",50,null],[12,"st_ctime","","",50,null],[12,"st_ctime_nsec","","",50,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",51,null],[12,"exponent","","",51,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",52,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",53,null],[12,"swd","","",53,null],[12,"ftw","","",53,null],[12,"fop","","",53,null],[12,"rip","","",53,null],[12,"rdp","","",53,null],[12,"mxcsr","","",53,null],[12,"mxcr_mask","","",53,null],[12,"_st","","",53,null],[12,"_xmm","","",53,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",54,null],[12,"fpregs","","",54,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",55,null],[12,"uc_link","","",55,null],[12,"uc_stack","","",55,null],[12,"uc_mcontext","","",55,null],[12,"uc_sigmask","","",55,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"mkfifoat","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",56,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",56,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",56,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",56,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",56,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",56,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",56,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",56,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",56,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",56,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",56,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",56,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",56,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",56,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",56,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",56,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",56,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",56,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",56,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",56,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",56,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",56,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",56,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"eq","","",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"cmp","","",56,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"fmt","","",56,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",56,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",57,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",57,null],[11,"clone","libc","",49,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",50,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",58,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",51,{"inputs":[{"name":"_libc_fpxreg"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",52,{"inputs":[{"name":"_libc_xmmreg"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",53,{"inputs":[{"name":"_libc_fpstate"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",54,{"inputs":[{"name":"mcontext_t"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",55,{"inputs":[{"name":"ucontext_t"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",59,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",48,{"inputs":[{"name":"sysinfo"}],"output":{"name":"sysinfo"}}],[11,"clone","","",37,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",38,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",39,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",40,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",41,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",42,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",43,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",44,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",45,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",46,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",47,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",60,{"inputs":[{"name":"sem_t"}],"output":{"name":"sem_t"}}],[11,"clone","","",27,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",28,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",29,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",30,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",31,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",61,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",62,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",63,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",64,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",32,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",33,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",34,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",35,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",65,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",36,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",66,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",17,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",18,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",19,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",67,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",21,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",22,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",23,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",24,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",25,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",26,{"inputs":[{"name":"lconv"}],"output":{"name":"lconv"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","","",12,{"inputs":[{"name":"winsize"}],"output":{"name":"winsize"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[4,"Option"],[8,"Clone"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["untrusted"] = {"doc":"untrusted.rs: Safe, fast, zero-panic, zero-crashing, zero-allocation\nparsing of untrusted inputs in Rust.","items":[[3,"Input","untrusted","A wrapper around `&amp;&#39;a [u8]` that helps in writing panic-free code.",null,null],[3,"Reader","","A read-only, forward-only* cursor into the data in an `Input`.",null,null],[3,"Mark","","An index into the already-parsed input of a `Reader`.",null,null],[5,"read_all_optional","","Calls `read` with the given input as a `Reader`, ensuring that `read`\nconsumed the entire input. When `input` is `None`, `read` will be\ncalled with `None`.",null,{"inputs":[{"name":"option"},{"name":"e"},{"name":"f"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"input"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"input"}],"output":{"name":"input"}}],[11,"new","","Construct a new `Input` for the given input `bytes`.",0,null],[11,"is_empty","","Returns `true` if the input is empty and false otherwise.",0,{"inputs":[{"name":"input"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `Input`.",0,{"inputs":[{"name":"input"}],"output":{"name":"usize"}}],[11,"read_all","","Calls `read` with the given input as a `Reader`, ensuring that `read`\nconsumed the entire input. If `read` does not consume the entire input,\n`incomplete_read` is returned.",0,{"inputs":[{"name":"input"},{"name":"e"},{"name":"f"}],"output":{"name":"result"}}],[11,"read_all_mut","","Like `read_all`, except taking an `FnMut`.",0,{"inputs":[{"name":"input"},{"name":"e"},{"name":"f"}],"output":{"name":"result"}}],[11,"as_slice_less_safe","","Access the input as a slice so it can be processed by functions that\nare not written using the Input/Reader framework.",0,null],[11,"eq","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"reader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct a new Reader for the given input. Use `read_all`,\n`read_all_mut`, or `read_all_optional` instead of `Reader::new`\nwhenever possible.",1,{"inputs":[{"name":"input"}],"output":{"name":"reader"}}],[11,"at_end","","Returns `true` if the reader is at the end of the input, and `false`\notherwise.",1,{"inputs":[{"name":"reader"}],"output":{"name":"bool"}}],[11,"get_input_between_marks","","Returns an `Input` for already-parsed input that has had its boundaries\nmarked using `mark`.",1,{"inputs":[{"name":"reader"},{"name":"mark"},{"name":"mark"}],"output":{"name":"result"}}],[11,"mark","","Return the current position of the `Reader` for future use in a call\nto `get_input_between_marks`.",1,{"inputs":[{"name":"reader"}],"output":{"name":"mark"}}],[11,"peek","","Returns `true` if there is at least one more byte in the input and that\nbyte is equal to `b`, and false otherwise.",1,{"inputs":[{"name":"reader"},{"name":"u8"}],"output":{"name":"bool"}}],[11,"read_byte","","Reads the next input byte.",1,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"skip","","Skips `num_bytes` of the input.",1,{"inputs":[{"name":"reader"},{"name":"usize"}],"output":{"name":"result"}}],[11,"skip_and_get_input","","Skips `num_bytes` of the input, returning the skipped input as an `Input`.",1,{"inputs":[{"name":"reader"},{"name":"usize"}],"output":{"name":"result"}}],[11,"skip_to_end","","Skips the reader to the end of the input, returning the skipped input\nas an `Input`.",1,{"inputs":[{"name":"reader"}],"output":{"name":"input"}}]],"paths":[[3,"Input"],[3,"Reader"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
